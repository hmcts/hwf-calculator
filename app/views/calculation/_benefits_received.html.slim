.content-body.benefits_received
  = render partial: 'feedback', locals: { current_calculation: current_calculation }
  = form_for form, as: :calculation, url: update_calculation_url(form: form.type), method: :patch do |f|
    .form-group class=('form-group-error' if form.errors.any?)
      fieldset
        legend
          h2.heading-medium = I18n.t('calculation.field_labels.benefits_received')
        details data-behavior="question_help"
          summary data-behavior="toggle"= t('calculation.guidance.income_benefits.summary')
          .panel-indent data-behavior="question_help_text"
            .text
              h2.heading-small = t('calculation.guidance.income_benefits.detail.summary')
              ul.list.list-bullet
                - t('calculation.guidance.income_benefits.detail.text').lines.each do |line|
                  li = line
        - if form.errors.include?(:benefits_received)
          span.error-message = form.errors[:benefits_received].join(', ')
        label
          = gds_error_messages(model: f.object, method: :benefits_received)
          = gds_multiple_choices_with_guidance(form: f, method: :benefits_received, choices: form.benefits.map {|benefit| [benefit, t("calculation.benefits.#{benefit}.label"), t("calculation.benefits.#{benefit}.guidance", raise: false)]})
    .form-group
      = f.submit 'Next step', class: 'button'
  = render partial: 'previous_questions', locals: { current_calculation: current_calculation, disabled: false } unless current_calculation.inputs.empty?
- content_for(:body_end) do
  javascript:
    $(document).ready(function () {
        var benefitsReceivedPage = new Calculator.BenefitsReceivedPage;
        benefitsReceivedPage.init();
    });
  yield